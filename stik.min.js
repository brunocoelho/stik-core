// ==========================================================================
// Project:   Stik.js - JavaScript Separation Of Concerns
// Copyright: Copyright 2011-2013 Lukas Alexandre
// License:   Licensed under MIT license
//            See https://github.com/lukelex/stik.js/blob/master/LICENSE
// ==========================================================================

// Version: 0.1.0 | From: 14-12-2013

window.stik||(window.stik={}),function(){function a(a,b,c,d){if(!a)throw"controller is missing";if(!b)throw"action is missing";if(!c)throw"template is missing";if(!d)throw"execution unit is missing";this.$$controller=a,this.$$action=b,this.$$template=c,this.$$executionUnit=d,this.$$disposable=!1}a.prototype.$load=function(a){var b=this.$resolveDependencies(this.$mergeModules(a));this.$$executionUnit.apply(new function(){},b)},a.prototype.$mergeModules=function(a){return a.$context=this,a.$template=this.$$template,a},a.prototype.$resolveDependencies=function(a){var b=new stik.Injector(this.$$executionUnit,a);return b.$resolveDependencies()},stik.Context=a}(),window.stik||(window.stik={}),function(){function a(a,b){this.$$executionUnit=a,this.$$modules=b}a.prototype.$resolveDependencies=function(){var a=this.$extractArguments();return this.$grabModules(a)},a.prototype.$extractArguments=function(){var a,b,c;return a=/^function\s*[^\(]*\(\s*([^\)]*)\)/m,b=this.$$executionUnit.toString(),c=b.match(a)[1].split(","),this.$trimmedArgs(c)},a.prototype.$grabModules=function(a){var b=[];if(1===a.length&&""===a[0])return[];for(var c=0;c<a.length;c++)b.push(this.$$modules[a[c]]);return b},a.prototype.$trimmedArgs=function(a){var b=[];return a.forEach(function(a){b.push(a.trim())}),b},stik.Injector=a}(),window.stik||(window.stik={}),function(){function a(a){this.$$contexts=[],this.$$executionUnits={},this.$$modules=a}a.prototype.$register=function(a,b,c){if(!c)throw"execution unit is missing";this.$storeExecutionUnit(a,b,c)},a.prototype.$storeExecutionUnit=function(a,b,c){this.$$executionUnits[a]||(this.$$executionUnits[a]={}),this.$$executionUnits[a][b]=c},a.prototype.$storeContext=function(a,b,c,d){return newContext=this.$createContext(a,b,c,d),this.$$contexts.push(newContext),newContext},a.prototype.$createContext=function(a,b,c,d){return new stik.Context(a,b,c,d)},a.prototype.$findTemplate=function(a,b,c){var d=document;c&&(d=c);var e="[data-controller="+a+"][data-action="+b+"]";return d.querySelectorAll(e)},a.prototype.$buildContexts=function(){var a,b,c,d;if(0===Object.keys(this.$$executionUnits).length)throw"no execution units available";for(a in this.$$executionUnits)for(b in this.$$executionUnits[a])c=this.$$executionUnits[a][b],this.$bindExecutionUnit(a,b,c)&&(d=!0);if(!d)throw"no templates were bound"},a.prototype.$bindExecutionUnit=function(a,b,c){var d,e;e=this.$findTemplate(a,b);for(var f=0;f<e.length;f++)this.$markAsBound(e[f]),d=this.$storeContext(a,b,e[f],c),d.$load(this.$$modules);return e.length>0},a.prototype.$markAsBound=function(a){a.className+=" stik-bound"},stik.Manager=a}(),window.stik||(window.stik={}),function(){stik.$$manager=new stik.Manager({}),stik.register=function(a,b,c){stik.$$manager.$register(a,b,c)},stik.init=function(){this.$$manager.$buildContexts()}}();